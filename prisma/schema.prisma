// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int            @id @default(autoincrement())
  email         String         @unique
  name          String
  password      String
  role          Role           @default(STUDENT)
  bio           String?
  imageUrl      String         @default("https://static.vecteezy.com/system/resources/previews/009/292/244/non_2x/default-avatar-icon-of-social-media-user-vector.jpg")
  teach         String?
  notifications Notification[]
  courses       Course[]
  Forum         Forum[]
  Material      Material[]
  Presence      Presence[]
  messages      Message[]
  forums        Forum[]        @relation("ForumMembers")
  progreses     Progres[]
}

model Course {
  id          Int        @id @default(autoincrement())
  name        String
  description String
  imageUrl    String?    @default("https://i0.wp.com/game.courses/wp-content/uploads/2020/08/placeholder.png?quality=80&ssl=1")
  userId      Int
  progreses   Progres[]
  schedules   Schedule[]
  materials   Material[]
  presences   Presence[]
  classes     Class[]
  user        User       @relation(fields: [userId], references: [id])
}

model Forum {
  id          Int       @id @default(autoincrement())
  title       String
  userId      Int
  description String
  user        User      @relation(fields: [userId], references: [id])
  messages    Message[]
  members     User[]    @relation("ForumMembers")
}

model Message {
  id        Int       @id @default(autoincrement())
  content   String
  userId    Int
  forumId   Int
  createdAt DateTime  @default(now())
  fileUrl   String?
  parentId  Int?
  parent    Message?  @relation("MessageReplies", fields: [parentId], references: [id])
  replies   Message[] @relation("MessageReplies")
  user      User      @relation(fields: [userId], references: [id])
  forum     Forum     @relation(fields: [forumId], references: [id])
}

model Schedule {
  id         Int      @id @default(autoincrement())
  start_time DateTime
  end_time   DateTime
  courseId   Int
  Course     Course   @relation(fields: [courseId], references: [id])
}

model Material {
  id             Int           @id @default(autoincrement())
  name           String
  description    String
  assignments    Assignment[]
  grades         Grade[]
  userId         Int
  fileUrl        String?
  date           DateTime      @default(now())
  start_time     String        @default("00:00")
  end_time       String        @default("23:59")
  done           Boolean       @default(false)
  user           User          @relation(fields: [userId], references: [id])
  Course         Course?       @relation(fields: [courseId], references: [id])
  courseId       Int?
  Notification   Notification? @relation(fields: [notificationId], references: [id])
  notificationId Int?
  progreses      Progres[]
}

model Assignment {
  id          Int       @id @default(autoincrement())
  title       String    @default("No Title")
  description String    @default("No Description")
  fileUrl     String
  start_date  DateTime
  end_date    DateTime
  Material    Material? @relation(fields: [materialId], references: [id])
  materialId  Int?
}

model Progres {
  id         Int        @id @default(autoincrement())
  done       Boolean    @default(false)
  userId     Int
  user       User       @relation(fields: [userId], references: [id])
  Course     Course?    @relation(fields: [courseId], references: [id])
  courseId   Int?
  materialId Int
  Material   Material?  @relation(fields: [materialId], references: [id])
  Presence   Presence[]
  Class      Class?     @relation(fields: [classId], references: [id])
  classId    Int?

  @@unique([userId, materialId])
}

model Grade {
  id        Int        @id @default(autoincrement())
  materials Material[]
  status    String
  feedback  String
}

model Notification {
  id        Int        @id @default(autoincrement())
  userId    Int
  materials Material[]
  user      User       @relation(fields: [userId], references: [id])
}

model Presence {
  id        Int      @id @default(autoincrement())
  status    Status
  date      DateTime @default(now())
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  Course    Course?  @relation(fields: [courseId], references: [id])
  courseId  Int?
  Progres   Progres? @relation(fields: [progresId], references: [id])
  progresId Int?

  @@unique([userId, date, courseId])
}

enum Status {
  PRESENT
  PERMISSION
  LATE
  ABSENT
}

model Class {
  id        Int       @id @default(autoincrement())
  name      String
  progreses Progres[]
  Course    Course?   @relation(fields: [courseId], references: [id])
  courseId  Int?
}

enum Role {
  SUPER_ADMIN
  ADMIN
  STUDENT
}
